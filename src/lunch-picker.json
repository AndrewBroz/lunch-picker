{
  "info": {
    "name": "Lunch Picker",
    "_postman_id": "a3712c2d-ae9f-4b2b-469c-1a2beb119007",
    "description": "![An example Slack post](https://i.imgur.com/2YJeB28.png \"An example Slack post with restaurant picks from Lunch Picker running as an 8am monitor.\")\n\nLunch Picker is a [Postman collection](https://www.getpostman.com/docs/postman/collections/creating_collections) that acts as a restaurant discovery service powered by the [Yelp Fusion API](https://www.yelp.com/developers/documentation/v3). When run, the collection suggests places for you or a team to have lunch and posts the suggestions to Slack. It can be run locally with the [Postman collection runner](https://www.getpostman.com/docs/postman/collection_runs/starting_a_collection_run) or with [Newman](https://www.getpostman.com/docs/postman/collection_runs/command_line_integration_with_newman), or as a scheduled remote job with [Postman Monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors).\n\nYou can [customize Lunch Picker's restaurant selection criteria](#cc479560-f6cf-f199-1757-65d9f051a324) such as location, distance, and price range with environment variables. The collection saves its choice history to a [Postman environment](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments) after each run to ensure future choices don't become repetitive.\n\n\n# Getting Started\n\nBefore you can run the Lunch Picker collection, you need to create or update an [environment](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments). Add the following required variables to a new environment, or update the `Lunch Picker.template` environment you downloaded with the *Run in Postman* button:\n\n|Environment Variable Name |Required? |Description\n|--------------------------|----------|--------------\n|`yelpClientID`            |**YES**   |[A Yelp client ID.](https://www.yelp.com/developers/documentation/v3/authentication)\n|`yelpClientSecret`        |**YES**   |[A Yelp client secret.](https://www.yelp.com/developers/documentation/v3/authentication)\n|`location`                |**YES**   |Specifies the combination of address, neighborhood, city, state or zip, and optional country to be used when searching for restaurants.\n|`webhook`                 |**YES**   |[A Slack incoming webhook url.](https://api.slack.com/incoming-webhooks)\n|`postmanApiKey`           |**YES**   |[A Postman Pro API key.](https://docs.api.getpostman.com/#authentication)\n|`environmentID`           |**YES**   |The id of your environment. Download your environment and copy the id, or get the id from the [Postman API](https://docs.api.getpostman.com/).\n\n\n\n## Get a Yelp Client ID and Secret\n\nYou will need to [Create a Yelp app](https://www.yelp.com/developers/documentation/v3/authentication) to get the `yelpClientID` and `yelpClientSecret` values.\n\n\n## Enter a Location\n\nSave the address of the location you want to search as `location`. The address should be in a region where Yelp is available, otherwise you won't get any results.\n\n\n## Get a Slack Webhook Url\n\nLog in to your team Slack account and [create a Slack app](https://api.slack.com/slack-apps). Then [activate and configure an incoming webhook](https://api.slack.com/incoming-webhooks) for your app. Add this webhook url as `webhook` in your environment.\n\n\n## Get a Postman Pro API Key\n\nLog in to your online Postman account and [get an API key](https://the.postman.co/dashboard/integrations/pm_pro_api/list) for the [Postman API](https://docs.api.getpostman.com/), then add `postmanApiKey` to your environment.\n\n\n## Get Your Environment ID\n\nOnce you've created your environment, you can get the `environmentID` value by downloading the environment and copying the id from the environment file.\n\nTry running the collection locally using the [Postman collection runner](https://www.getpostman.com/docs/postman/collection_runs/starting_a_collection_run) or [Newman](https://www.getpostman.com/docs/postman/collection_runs/command_line_integration_with_newman). It should get restaurant results for your location and post them to your Slack channel. If it doesn't, check the run results and the Postman console to see what might have gone wrong.\n\n![A successful run](https://i.imgur.com/PqvXcc6.png \"A succesful run in the collection runner.\")\n\n\n# Going Further\n\nYou can [customize the behavior of Lunch Picker with optional environment variables](#cc479560-f6cf-f199-1757-65d9f051a324). Try updating the search radius or the price range to improve your results, or set favorite restaurants to increase the chance of those restaurants being picked. Once you have the settings you want, [create a monitor](https://www.getpostman.com/docs/postman/monitors/intro_monitors) to get periodic recommendations. _Bon appétit!_",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "bdffc5c2-06f8-b3b5-0f4f-0533f12b6151",
      "name": "Get Yelp Access Token",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "08775de0-58ef-479c-8dd2-4af0c45049f8",
            "type": "text/javascript",
            "exec": [
              "// \"Lunch Picker\" MIT License, Copyright (c) 2018 Andrew Broz (@abroz)",
              "// Find the latest version at https://github.com/abroz/lunch-picker",
              "",
              "// Include util",
              "util();",
              "",
              "// Clear globals used by Lunch Picker",
              "clearLunchPickerGlobals();",
              "",
              "const guidRe = /^[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$/i;",
              "const postmanApiKeyRe = /^[0-9a-f]{8}([0-9a-f]{4}){3}[0-9a-f]{12}$/i;",
              "const slackWebhookRe = /^https:\\/\\/hooks.slack.com\\/services\\/.+/;",
              "",
              "// Do a run pre-check for environment variables",
              "// If any fail validation, stop the workflow and throw an error",
              "validateVariables([",
              "    {",
              "        key: 'yelpClientID',",
              "        optional: false,",
              "        description: 'a Yelp client ID',",
              "        test: id => id.length > 5,",
              "    },",
              "    {",
              "        key: 'yelpClientSecret',",
              "        optional: false,",
              "        description: 'a Yelp client secret',",
              "        test: secret => secret.length > 10,",
              "    },",
              "    {",
              "        key: 'location',",
              "        optional: false,",
              "        description: 'an address',",
              "        test: location => location.length > 3,",
              "    },",
              "    {   ",
              "        key: 'webhook',",
              "        optional: false,",
              "        description: 'a Slack webhook url',",
              "        test: url => slackWebhookRe.test(url),",
              "    },",
              "    {",
              "        key: 'postmanApiKey',",
              "        optional: false,",
              "        description: 'a valid Postman API key',",
              "        test: key => postmanApiKeyRe.test(key),",
              "    },",
              "    {",
              "        key: 'environmentID',",
              "        optional: false,",
              "        description: 'a valid Postman environment ID',",
              "        test: id => guidRe.test(id),",
              "    },",
              "    {",
              "        key: 'price',",
              "        optional: true,",
              "        description: 'a Yelp price range (e.g. \"1,2,3\")',",
              "        test: price => price.split(',').every(p =>",
              "            p.length === 1 &&",
              "            p >= 1 && p <= 4",
              "        ),",
              "    },",
              "    {",
              "        key: 'radius',",
              "        optional: true,",
              "        description: 'an integer value between 1-40000',",
              "        test: radius => radius >= 1 && radius <= 40000,",
              "    },",
              "    {",
              "        key: 'maxResults',",
              "        optional: true,",
              "        description: 'an integer value between 1-1000',",
              "        test: n => n > 0 && n <= 1000,",
              "    },",
              "    {",
              "        key: 'choiceCount',",
              "        optional: true,",
              "        description: 'an integer value between 1-10',",
              "        test: n => n >= 1 && n <= 10,",
              "    },",
              "    {",
              "        key: 'historyLength',",
              "        optional: true,",
              "        description: 'a non-negative integer',",
              "        test: n => n >= 0,",
              "    },",
              "    {",
              "        key:'openIn',",
              "        optional: true,",
              "        description: 'a non-negative integer',",
              "        test: n => n >= 0,",
              "    },",
              "    {",
              "        key: 'walking',",
              "        optional: true,",
              "        description: 'a boolean value (true or false)',",
              "        test: bool => _.isBoolean(tryParse(bool)),",
              "    },",
              "]);",
              "",
              "// Add a set of utility functions to requests to a global. To include",
              "// these utilities in a pre-request or a test script, add this line to",
              "// the top of the script:",
              "//    eval(pm.globals.get('util'));",
              "pm.globals.set('util', `(${util})()`);",
              "",
              "/**",
              " * Add utility functions to the global scope.",
              " */",
              "function util () {",
              "    _ = require('lodash');",
              "    ",
              "    if (!_.round) {",
              "        // Polyfill lodash round (not available before lodash v3.10.0)",
              "        _.round = (number, precision) => +number.toFixed(precision);",
              "    }",
              "    ",
              "    // Try to parse JSON data. Return `defaultValue` on parse error",
              "    tryParse = (jsonData, defaultValue) => {",
              "        try {",
              "            return JSON.parse(jsonData);",
              "        }",
              "        catch (e) {",
              "            return defaultValue;",
              "        }",
              "    };",
              "",
              "    // Pick an array element at random",
              "    getRandomElement = array => array[_.random(array.length - 1)];",
              "    ",
              "    // Get the average value of a property over a list of objects",
              "    getAverage = (ls, prop) => ls.reduce((sum, obj) => sum + obj[prop], 0) / ls.length;",
              "",
              "    // Get the square of a value",
              "    square = x => x * x;",
              "",
              "    // Get the root of a value",
              "    root = (x, r = 2) => Math.pow(x, 1 / r);",
              "    ",
              "    // Get the standard deviation of a set of values",
              "    getSD = (values, avg) => root(values",
              "        .map(v => square(v - avg))",
              "        .reduce((x, y) => x + y)",
              "        / values.length",
              "    );",
              "    ",
              "    // Takes a number to a non-negative integer (non-positive values all map to zero)",
              "    nonNegativeInt = x => x > 0 ? Math.ceil(x) : 0;",
              "",
              "    // Return an array with n duplicates of x",
              "    duplicate = (x, n) => n > 0 ? Array(n).fill(x) : [];",
              "",
              "    // Pluralize based on an array's length",
              "    pluralize = (ls, string, plural) => ls.length === 1 ? string : plural || `${string}s`;",
              "",
              "    // Given a Postman sandbox method, return an update method that accepts",
              "    // an object and updates key/value pairs",
              "    const updateFactory = variableType => obj => Object.keys(obj).forEach(key =>",
              "        pm[variableType].set(key, obj[key] && JSON.stringify(obj[key]))",
              "    );",
              "",
              "    // Set environment variables by passing an object with key/value pairs",
              "    updateEnvironment = updateFactory('environment');",
              "",
              "    // Set global variables by passing an object with key/value pairs",
              "    updateGlobals = updateFactory('globals');",
              "    ",
              "    // Log a formatted warning",
              "    warning = message => console.log(`Warning :: ${message}`);",
              "",
              "    // Log a message and throw an error",
              "    logAndThrow = (message, error = new Error(message)) => {",
              "        warning(message);",
              "        throw error;",
              "    };",
              "    ",
              "    // Clear globals used by lunch picker",
              "    clearLunchPickerGlobals = () => {",
              "        const lunchPickerGlobals = [",
              "            'choices',",
              "            'formattedChoices',",
              "            'offset',",
              "            'openAt',",
              "            'price',",
              "            'radius',",
              "            'restaurants',",
              "            'util',",
              "            'values',",
              "        ];",
              "        ",
              "        for (const key of lunchPickerGlobals) {",
              "            pm.globals.clear(key);",
              "        }",
              "    }",
              "",
              "    // Stop the workflow",
              "    stopWorkflow = reason => {",
              "        postman.setNextRequest(null);",
              "        warning(`End of workflow${reason ? ` :: ${reason}` : '.'}`);",
              "        clearLunchPickerGlobals();",
              "    };",
              "    ",
              "    // Stop the worflow and throw an error",
              "    stopAndThrow = (message = '') => {",
              "        stopWorkflow();",
              "        throw new Error(message);",
              "    };",
              "    ",
              "    // Stop the workflow and throw if a variable is set and it fails a test",
              "    validateVariables = (variables = []) => variables.forEach(variable => {",
              "        const { key, description, test, optional } = variable;",
              "        const value = pm.environment.get(key);",
              "        const isUndefined = value === undefined;",
              "        ",
              "        if (!optional && isUndefined) {",
              "            stopAndThrow(`Missing required environment variable \"${key}\".`);",
              "        }",
              "        ",
              "        if (!(optional && isUndefined) && test && !test(value)) {",
              "            stopAndThrow(`Environment variable \"${key}\" value \"${value}\" does not look like ${description}.`);",
              "        }",
              "    });",
              "}"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "202ebfb0-6ab2-4d59-a4e3-960e757735e8",
            "type": "text/javascript",
            "exec": [
              "// Include util",
              "eval(pm.globals.get('util'));",
              "",
              "// Test the response",
              "pm.test('Response is OK', () => {",
              "    pm.response.to.be.ok;",
              "});",
              "",
              "pm.test('Included access_token and expires_in values', () => {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.have.property('access_token');",
              "    pm.expect(responseData).to.have.property('expires_in');",
              "});",
              "",
              "try {",
              "    // Save the access token and expiry date to the environment",
              "    const responseData = pm.response.json();",
              "",
              "    pm.environment.set('yelpAccessToken', responseData.access_token);",
              "    pm.environment.set('yelpAccessTokenExpiresAt', Date.now() + parseInt(responseData.expires_in));",
              "}",
              "catch (error) {",
              "    // Something went wrong",
              "    stopWorkflow(error.message);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {},
        "url": {
          "raw": "https://api.yelp.com/oauth2/token?grant_type=client_credentials&client_id={{yelpClientID}}&client_secret={{yelpClientSecret}}",
          "protocol": "https",
          "host": [
            "api",
            "yelp",
            "com"
          ],
          "path": [
            "oauth2",
            "token"
          ],
          "query": [
            {
              "key": "grant_type",
              "value": "client_credentials",
              "equals": true
            },
            {
              "key": "client_id",
              "value": "{{yelpClientID}}",
              "equals": true
            },
            {
              "key": "client_secret",
              "value": "{{yelpClientSecret}}",
              "equals": true
            }
          ]
        },
        "description": "Get a [Yelp Acess Token](https://www.yelp.com/developers/documentation/v3/authentication) from a Yelp client ID and Yelp client secret key. Make sure that both `yelpClientID` and `yelpClientSecret` are set in your environment.\n\n|Environment Variable Name |Required? |Description\n|--------------------------|----------|--------------\n|`yelpClientID`            |**YES**   |[A Yelp client ID.](https://www.yelp.com/developers/documentation/v3/authentication)\n|`yelpClientSecret`        |**YES**   |[A Yelp client secret.](https://www.yelp.com/developers/documentation/v3/authentication)"
      },
      "response": []
    },
    {
      "_postman_id": "cc479560-f6cf-f199-1757-65d9f051a324",
      "name": "Pick Restaurants",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "33ebd544-96c8-483c-b182-421a8e4dee76",
            "type": "text/javascript",
            "exec": [
              "// Include util",
              "eval(pm.globals.get('util'));",
              "",
              "// Set globals on the first iteration",
              "if (!pm.globals.get('offset')) {",
              "    validateVariables([{",
              "        key: 'yelpAccessToken',",
              "        optional: false,",
              "        description: 'a Yelp access token',",
              "        test: token => token.length > 100,",
              "    }]);",
              "    ",
              "    let { openIn, openAt = '', price = '', radius = 5000 } = pm.environment.toObject();",
              "",
              "    if (openIn) {",
              "        openAt = Math.floor(new Date() / 1000) + 3600 * openIn;",
              "    }",
              "",
              "    updateGlobals({ openAt, radius, price, offset: 0 });",
              "    ",
              "    console.log(`Searching for restaurants near ${pm.environment.get('location')}.`);",
              "    console.log(`Searching for results within ${radius} meters.`);",
              "    price && console.log(`Searching for results within Yelp price range (${price}).`);",
              "    openAt && console.log(`Searching for results open in ${openIn} hours on ${new Date(1000 * openAt)}.`);",
              "}"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "bd5f930e-4ab5-4e98-82c3-ca8293924c64",
            "type": "text/javascript",
            "exec": [
              "const currentGlobals = pm.globals.toObject();",
              "const currentEnvironment = pm.environment.toObject();",
              "",
              "// Include util",
              "eval(currentGlobals.util);",
              "",
              "// Do some basic tests to make sure the response looks right",
              "pm.test('Response is OK', () => {",
              "    pm.response.to.be.ok;",
              "});",
              "",
              "pm.test('Got businesses', () => {",
              "    const responseData = pm.response.json();",
              "    pm.expect(responseData).to.have.property('businesses').that.is.an('array');",
              "});",
              "",
              "pm.test('No error in response data', () => {",
              "    const responseData = pm.response.json();",
              "    pm.expect(responseData).to.not.have.property('error');",
              "});",
              "",
              "// Paging values",
              "const limit = 50;",
              "const offset = +currentGlobals.offset || 0;",
              "",
              "// Use the radius to compute walk scores",
              "const radius = +currentGlobals.radius || +currentEnvironment.radius;",
              "",
              "// Optional environment variables",
              "const maxResults = +currentEnvironment.maxResults || 200;",
              "const choiceCount = +currentEnvironment.choiceCount || 3;",
              "const historyLength = +currentEnvironment.historyLength || 3 * choiceCount;",
              "const favorites = currentEnvironment.favorites ? currentEnvironment.favorites.split(',') : [];",
              "const walking = tryParse(currentEnvironment.walking, false);",
              "",
              "// Set once we calculate stats (after we have all retaurants)",
              "let averageRating = 0;",
              "let averageReviewCount = 0;",
              "let ratingsSD = 0;",
              "let ratingCutoff = 0;",
              "let multiplier = 0;",
              "",
              "try {",
              "    // Get the Yelp business data (in this case, the businesses are restaurants)",
              "    const { error, businesses } = pm.response.json();",
              "    ",
              "    if (error) {",
              "        throw new Error(error.description);",
              "    }",
              "",
              "    // Append new restaurant results to the previous results",
              "    const previousResults = tryParse(currentGlobals.restaurants, []);",
              "    const restaurants = [...previousResults, ...businesses];",
              "    ",
              "    if (businesses.length === limit && restaurants.length < maxResults - limit + 1) {",
              "        // We can get more restaurants",
              "        getMoreRestaurants(restaurants);",
              "    }",
              "    else if (restaurants.length > 0) {",
              "        // We're done getting restaurants, so make the restaurant choices",
              "        makeRestaurantChoices(restaurants);",
              "    }",
              "    else {",
              "        throw new Error('No restaurants returned! Try updating your environment parameters.');",
              "    }",
              "}",
              "catch (e) {",
              "    stopWorkflow(e.message);",
              "}",
              "",
              "/**",
              " * Make another request to Yelp with a larger offset.",
              " * ",
              " * @param {Object[]} restaurants - An array of Yelp business objects.",
              " */",
              "function getMoreRestaurants (restaurants) {",
              "    updateGlobals({ restaurants, offset: offset + limit });",
              "",
              "    // Repeat this request with updated globals to get more restaurants",
              "    // CAREFUL: The request name must match the name of the request being set",
              "    postman.setNextRequest('Pick Restaurants');",
              "    ",
              "    console.log(`Getting 50 more results (current offset ${pm.globals.get('offset')}) ...`);",
              "}",
              "",
              "/**",
              " * Chose restaurants and update global and environment state.",
              " * ",
              " * @param {Object[]} restaurants - An array of Yelp business objects.",
              " */",
              "function makeRestaurantChoices (restaurants) {",
              "    console.log(`Choosing from ${restaurants.length} restaurants ...`);",
              "    ",
              "    // Make restaurant choices",
              "    const pastChoices = tryParse(pm.environment.get('choiceHistory'), []);",
              "    const choices = chooseRestaurants(restaurants, pastChoices);",
              "    updateGlobals({ choices, offset: 0 });",
              "    ",
              "    // Update history, removing oldest entries",
              "    const choiceHistory = [...choices, ...pastChoices].slice(0, historyLength);",
              "    updateEnvironment({ choiceHistory });",
              "}",
              "",
              "/**",
              " * Choose restaurants using a random raffle strategy with removal.",
              " * ",
              " * @param {Object[]} restaurants - An array of Yelp business objects.",
              " * @param {Object[]} choiceHistory - An array of Yelp business objects (history from previous runs).",
              " * @returns {Object[]} - An array of `choiceCount` Yelp business objects.",
              " */",
              "function chooseRestaurants (restaurants, choiceHistory) {",
              "    let rafflePool = getRafflePool(restaurants, choiceHistory);",
              "    let choices = [];",
              "    ",
              "    while (choices.length < choiceCount && rafflePool.length > 0) {",
              "        const choice = drawTicket(rafflePool, choices);",
              "        choices.push(choice);",
              "        rafflePool = rafflePool.filter(ticket => ticket !== choice);",
              "        ",
              "        console.log(`Picked \"${choice.name}\".`);",
              "    }",
              "    ",
              "    return choices;",
              "}",
              "",
              "/**",
              " * Draw a ticket from the raffle pool, excluding repeated categories when possible.",
              " *",
              " * @param {Object[]} rafflePool",
              " * @param {Object[]} choices",
              " * @returns {Object}",
              " */",
              "function drawTicket (rafflePool, choices) {",
              "    const noRepeatCategories = rafflePool.filter(ticket =>",
              "        !choices.some(choice => shareCategory(ticket, choice))",
              "    );",
              "    ",
              "    if (noRepeatCategories.length > 0) {",
              "        console.log('Picking a new choice ...');",
              "        return getRandomElement(noRepeatCategories);",
              "    }",
              "    else {",
              "        warning('Picking a new choice with repeat categories ...');",
              "        return getRandomElement(rafflePool);",
              "    }",
              "}",
              "",
              "/**",
              " * Get an array of restaurants with duplicate references, where the number of duplicates corresponds to the restaurant score.",
              " *",
              " * @param {Object[]} restaurants - New restaurants to choose from.",
              " * @param {Object[]} choiceHistory - Past restaurant choices.",
              " * @returns {Object[]} - An array of references to restaurant objects (raffle tickets).",
              " */",
              "function getRafflePool (restaurants, choiceHistory = []) {",
              "    calculateStats(restaurants);",
              "    ",
              "    // Only include the closest restaurant in a chain",
              "    const dedupedRestaurants = reduceChains(restaurants);",
              "    ",
              "    let restaurantOptions = dedupedRestaurants.filter(restaurant =>",
              "        notRepeatChoice(restaurant, choiceHistory) && ",
              "        notRepeatCategory(restaurant, choiceHistory)",
              "    );",
              "    ",
              "    if (restaurantOptions.length < choiceCount) {",
              "        warning('There aren\\'t many options left. Try adjusting your environment variables.');",
              "        restaurantOptions = dedupedRestaurants.filter(restaurant =>",
              "            notRepeatChoice(restaurant, choiceHistory)",
              "        );",
              "    }",
              "",
              "    if (restaurantOptions.length < choiceCount) {",
              "        warning('Having trouble finding non-repetitive options. Try adjusting your environment variables.');",
              "        restaurantOptions = dedupedRestaurants;",
              "    }",
              "",
              "    return _.flatten(restaurantOptions.map(getRaffleTickets));",
              "}",
              "",
              "/**",
              " * Calcualte averages and SDs from the dataset.",
              " * ",
              " * @param {Object[]} restaurants - An array of Yelp business objects.",
              " */",
              "function calculateStats (restaurants) {",
              "    averageRating = getAverage(restaurants, 'rating');",
              "    console.log(`The local average rating is ${averageRating}.`);",
              "    ",
              "    averageReviewCount = getAverage(restaurants, 'review_count');",
              "    console.log(`The local average review count is ${averageReviewCount}.`);",
              "",
              "    ratingsSD = getSD(restaurants.map(r => r.rating), averageRating);",
              "    console.log(`The ratings standard deviation is ${ratingsSD}.`);",
              "    ",
              "    // Use these in adjusted ratings",
              "    ratingCutoff = averageRating - ratingsSD;",
              "    multiplier = 4 / (5 - ratingCutoff);",
              "}",
              "",
              "/**",
              " * Chains have an unfair advantage in the raffle because there are so many of them. If several",
              " * restaurants have the same name, assume they're part of a chain and remove all but the closest one.",
              " * ",
              " * @params {Object[]} restuarants",
              " * @returns {Object[]}",
              " */",
              "function reduceChains (restaurants) {",
              "    return _(restaurants)",
              "        .groupBy('name')",
              "        .map(getClosest)",
              "        .value();",
              "}",
              "",
              "/**",
              " * Return the nearest restaurant in a list.",
              " * ",
              " * @params {Object[]} restuarants",
              " * @returns {Object}",
              " */",
              "function getClosest (restaurants) {",
              "    return restaurants.reduce((a, b) =>",
              "        a.distance < b.distance ? a : b",
              "    );",
              "}",
              "",
              "/**",
              " * Check if a restaurant isn't a repeat from the choice history.",
              " *",
              " * @param {Object} restaurant - A Yelp business object.",
              " * @param {Object[]} choiceHistory - Past restaurant choices.",
              " * @returns {Boolean}",
              " */",
              "function notRepeatChoice (restaurant, choiceHistory) {",
              "    return !choiceHistory.some(choice => restaurant.id === choice.id);",
              "}",
              "",
              "/**",
              " * Check if a restaurant isn't in a repeat category from the choice history.",
              " *",
              " * @param {Object} restaurant - A Yelp business object.",
              " * @param {Object[]} choiceHistory - Past restaurant choices.",
              " * @returns {Boolean}",
              " */",
              "function notRepeatCategory (restaurant, choiceHistory) {",
              "    return !choiceHistory.some(choice => shareCategory(restaurant, choice));",
              "}",
              "",
              "/**",
              " * Check if two restaurants share a category.",
              " *",
              " * @param {Object} restaurantA",
              " * @param {Object} restaurantB",
              " * @returns {Boolean}",
              " */",
              "function shareCategory (restaurantA, restaurantB) {",
              "    const categoriesA = getCategories(restaurantA);",
              "    const categoriesB = getCategories(restaurantB);",
              "",
              "    return categoriesA.some(category => categoriesB.includes(category));",
              "}",
              "",
              "/**",
              " * Get the Yelp category aliases for a restaurant.",
              " *",
              " * @param {Object[]} restaurant.categories - An array of Yelp categories.",
              " * @returns {String[]} - An array of restaurant category aliases.",
              " */",
              "function getCategories ({ categories = [] }) {",
              "    return categories.map(category => category.alias);",
              "}",
              "",
              "/**",
              " * Return an array of references to a restaurant object (tickets).",
              " * Good, close restaurants get more tickets. Favorites get 64 tickets.",
              " * ",
              " * @param {Object} restaurant - A Yelp business object.",
              " * @returns {Object[]} - An array of restaurant object references.",
              " */",
              "function getRaffleTickets (restaurant) {",
              "    let ticketCount = 64;",
              "    ",
              "    if (!favorites.includes(restaurant.id)) {",
              "        const adjustedRating = getAdjustedRating(restaurant);",
              "        const walkScore = getWalkScore(restaurant);",
              "",
              "        ticketCount = walkScore * square(adjustedRating);",
              "    }",
              "        ",
              "    return duplicate(restaurant, ticketCount);",
              "}",
              "",
              "/**",
              " * Get an adjusted integer rating by adding a prior and curving the results.",
              " * ",
              " * @param {Number} restaurant.rating - The Yelp rating.",
              " * @param {Number} restaurant.review_count - The number of reviews.",
              " * @returns {Number} - An integer between 0 and 4.",
              " */",
              "function getAdjustedRating ({ id, rating, review_count }) {",
              "    // Get a new Bayes-like average rating. Computes the weight differently than a conventional Bayesian average",
              "    // because the normality assumption biases against new restaurants and restaurants with lower traffic levels.",
              "    const weight = review_count / (review_count + root(averageReviewCount));",
              "    rating = weight * rating + (1 - weight) * averageRating;",
              "",
              "    // Remove some stars to adjust for rating inflation and disqualify mediocre results",
              "    rating -= ratingCutoff;",
              "    ",
              "    // Compute the new score",
              "    return nonNegativeInt(multiplier * rating);",
              "}",
              "",
              "/**",
              " * Get an integer walk score.",
              " * ",
              " * @param {Number} restaurant.distance - The restaurant distance in meters.",
              " * @returns {Number} - An integer between 0 and 4.",
              " */",
              "function getWalkScore ({ distance }) {",
              "    if (!walking) {",
              "        // When not walking, assign all restaurants the same walk score",
              "        return 1;",
              "    }",
              "    ",
              "    // Assume laziness grows exponentially with distance",
              "    const r2 = square(radius);",
              "    const d2 = square(distance);",
              "    const normedWalkScore = (r2 - d2) / r2;",
              "    ",
              "    // Adjust the walk score to fall between 0 and 4",
              "    return nonNegativeInt(4 * normedWalkScore);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{yelpAccessToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "https://api.yelp.com/v3/businesses/search?categories=restaurants&limit=50&sort_by=best_match&offset={{offset}}&location={{location}}&price={{price}}&radius={{radius}}&open_at={{openAt}}",
          "protocol": "https",
          "host": [
            "api",
            "yelp",
            "com"
          ],
          "path": [
            "v3",
            "businesses",
            "search"
          ],
          "query": [
            {
              "key": "categories",
              "value": "restaurants",
              "equals": true,
              "description": "We want restaurants, but this collection could generalize to other business types."
            },
            {
              "key": "limit",
              "value": "50",
              "equals": true,
              "description": "This is the maximum result limit allowed."
            },
            {
              "key": "sort_by",
              "value": "best_match",
              "equals": true,
              "description": "This makes a difference when there are more results than the limit allows. Can be set to `rating`, `distance`, or `best_match`. Default is `best_match`."
            },
            {
              "key": "offset",
              "value": "{{offset}}",
              "equals": true,
              "description": "Set in pre-request script."
            },
            {
              "key": "location",
              "value": "{{location}}",
              "equals": true,
              "description": "Specifies the combination of \"address, neighborhood, city, state or zip, optional country\" to be used when searching for restaurants."
            },
            {
              "key": "price",
              "value": "{{price}}",
              "equals": true,
              "description": "Pricing levels to filter the search result by: 1 = $, 2 = $$, 3 = $$$, 4 = $$$$. The price filter can be a list of comma delimited pricing levels. For example, \"1, 2, 3\" will filter the results to show the ones that are $, $$, or $$$."
            },
            {
              "key": "radius",
              "value": "{{radius}}",
              "equals": true,
              "description": "Search radius in meters. If the value is too large, an `AREA_TOO_LARGE` error may be returned. The max value is 40000 meters (25 miles)."
            },
            {
              "key": "open_at",
              "value": "{{openAt}}",
              "equals": true,
              "description": "Set in pre-request script from`openIn`."
            }
          ]
        },
        "description": "Get restaurants using the [Yelp Business Search API](https://www.yelp.com/developers/documentation/v3/business_search). Pick restaurants using a randomized process that favors popular, well-rated, and nearby restaurants while disallowing repetition of restaurants and categories from saved history.\n\nMake sure the variable `location` is set in your environment.\n\n|Environment Variable Name |Required? |Description\n|--------------------------|----------|--------------\n|`location`                |**YES**   |Specifies the combination of address, neighborhood, city, state or zip, and optional country to be used when searching for restaurants.\n|`price`                   |_no_      |Pricing levels to filter the search result by: 1 = $, 2 = $$, 3 = $$$, 4 = $$$$. The price filter can be a list of comma delimited pricing levels. For example, \"1,2,3\" will filter the results to show the ones that are $, $$, or $$$. Includes all price levels by default.\n|`radius`                  |_no_      |A search radius in meters. If the value is too large, an `AREA_TOO_LARGE` error may be returned. The max value is 40000 meters (25 miles). Default value is 5000.\n|`maxResults`              |_no_      |The target maximum number of results to get. Default value is 200. (_Note: Since setting this value too high could cause a long-running loop, the max allowed value is 1000._)\n|`choiceCount`             |_no_      |The number of restaurant choices to make between 1 and 10. Default value is 3.\n|`historyLength`           |_no_      |Customize the number of restaurants you want saved in the history. Default value is (3 × `choiceCount`).\n|`favorites`               |_no_      |A comma delimited list of Yelp restaurant IDs. You can find a restaurant's Yelp ID in the URL of its Yelp page. Restaurants added to favorites have a higher chance of being picked.\n|`openIn`                  |_no_      |A number of hours in which to check open times, used to populate the `open_at` query parameter. This parameter is useful when creating a monitor or running a local cron job: set `openIn` to the difference in hours between your meal time and the scheduled run time. For example, if `openIn` is set to 4 and a monitor is scheduled at 8:00am local time, it will return results open at 12:00pm local time. Setting `openIn` to 0 will return restaurants open now. When `openIn` is not specified, results are not filtered by open time.\n|`walking`                 |_no_      |A boolean (`true` or `false`) that makes the selection process favor places that are closer to the location. See the `getWalkScore` function in the Tests tab for an description of how this works. Default value is `false`."
      },
      "response": [
        {
          "id": "7b47a943-a150-b1a6-c7f1-a653a979d35d",
          "name": "Successful response",
          "originalRequest": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{yelpAccessToken}}"
              }
            ],
            "body": {},
            "url": {
              "raw": "https://api.yelp.com/v3/businesses/search?categories=restaurants&limit=50&sort_by=distance&offset={{offset}}&location={{location}}&price={{price}}&radius={{radius}}&open_at={{openAt}}",
              "protocol": "https",
              "host": [
                "api",
                "yelp",
                "com"
              ],
              "path": [
                "v3",
                "businesses",
                "search"
              ],
              "query": [
                {
                  "key": "categories",
                  "value": "restaurants",
                  "equals": true
                },
                {
                  "key": "limit",
                  "value": "50",
                  "equals": true
                },
                {
                  "key": "sort_by",
                  "value": "distance",
                  "equals": true
                },
                {
                  "key": "offset",
                  "value": "{{offset}}",
                  "equals": true
                },
                {
                  "key": "location",
                  "value": "{{location}}",
                  "equals": true
                },
                {
                  "key": "price",
                  "value": "{{price}}",
                  "equals": true
                },
                {
                  "key": "radius",
                  "value": "{{radius}}",
                  "equals": true
                },
                {
                  "key": "open_at",
                  "value": "{{openAt}}",
                  "equals": true
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Accept-Ranges",
              "value": "bytes",
              "name": "Accept-Ranges",
              "description": "Content-Types that are acceptable"
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "name": "Connection",
              "description": "Options that are desired for the connection"
            },
            {
              "key": "Content-Length",
              "value": "47699",
              "name": "Content-Length",
              "description": "The length of the response body in octets (8-bit bytes)"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "name": "Content-Type",
              "description": "The mime type of this content"
            },
            {
              "key": "Date",
              "value": "Sun, 02 Jul 2017 21:45:48 GMT",
              "name": "Date",
              "description": "The date and time that the message was sent"
            },
            {
              "key": "Server",
              "value": "nginx",
              "name": "Server",
              "description": "A name for the server"
            },
            {
              "key": "Via",
              "value": "1.1 varnish",
              "name": "Via",
              "description": "Informs the client of proxies through which the response was sent."
            },
            {
              "key": "X-Cache",
              "value": "MISS",
              "name": "X-Cache",
              "description": "Custom header"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0",
              "name": "X-Cache-Hits",
              "description": "Custom header"
            },
            {
              "key": "X-Proxied",
              "value": "10-64-16-186-uswest1bprod",
              "name": "X-Proxied",
              "description": "Custom header"
            },
            {
              "key": "X-Served-By",
              "value": "cache-sjc3146-SJC",
              "name": "X-Served-By",
              "description": "Custom header"
            }
          ],
          "cookie": [],
          "responseTime": "1418",
          "body": "{\"businesses\": [{\"id\": \"mazarine-coffee-san-francisco-2\", \"name\": \"Mazarine Coffee\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/ztvvrbekdD9MjDQC4KAuvg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/mazarine-coffee-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 394, \"categories\": [{\"alias\": \"coffee\", \"title\": \"Coffee & Tea\"}, {\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.787579982406, \"longitude\": -122.404056472387}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"720 Market St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"720 Market St\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14153987700\", \"display_phone\": \"(415) 398-7700\", \"distance\": 15.365302397199999}, {\"id\": \"nespresso-boutique-bar-san-francisco-2\", \"name\": \"Nespresso Boutique Bar\", \"image_url\": \"https://s3-media4.fl.yelpcdn.com/bphoto/sern-quTFCOa6y12qzvSTA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/nespresso-boutique-bar-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 341, \"categories\": [{\"alias\": \"cafes\", \"title\": \"Cafes\"}, {\"alias\": \"coffee\", \"title\": \"Coffee & Tea\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7875580638647, \"longitude\": -122.404947951436}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"90 Grant Ave\", \"address2\": null, \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"90 Grant Ave\", \"San Francisco, CA 94108\"]}, \"phone\": \"+18005621465\", \"display_phone\": \"(800) 562-1465\", \"distance\": 31.692801821619998}, {\"id\": \"oasis-grill-san-francisco-4\", \"name\": \"Oasis Grill\", \"image_url\": \"https://s3-media4.fl.yelpcdn.com/bphoto/HoWy8WvJnwUCwtALjwcMQg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/oasis-grill-san-francisco-4?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 119, \"categories\": [{\"alias\": \"mediterranean\", \"title\": \"Mediterranean\"}, {\"alias\": \"greek\", \"title\": \"Greek\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.7870994252634, \"longitude\": -122.403846904635}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"711B Market St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"711B Market St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14156530464\", \"display_phone\": \"(415) 653-0464\", \"distance\": 65.0492974924}, {\"id\": \"super-duper-burgers-san-francisco-3\", \"name\": \"Super Duper Burgers\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/7MWvnd7maQLOC5jM3EGyiA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/super-duper-burgers-san-francisco-3?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 2214, \"categories\": [{\"alias\": \"burgers\", \"title\": \"Burgers\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.7868189045762, \"longitude\": -122.40416383317}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"721 Market St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"721 Market St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14155383437\", \"display_phone\": \"(415) 538-3437\", \"distance\": 83.76952017664}, {\"id\": \"earthbar-san-francisco-5\", \"name\": \"Earthbar\", \"image_url\": \"https://s3-media4.fl.yelpcdn.com/bphoto/McLKMPEXqvtj8jeuyHZ6Xw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/earthbar-san-francisco-5?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 15, \"categories\": [{\"alias\": \"juicebars\", \"title\": \"Juice Bars & Smoothies\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.7862129211426, \"longitude\": -122.404304504395}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"747 Market St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"747 Market St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14155166480\", \"display_phone\": \"(415) 516-6480\", \"distance\": 112.21488470179999}, {\"id\": \"corner-bakery-cafe-san-francisco-2\", \"name\": \"Corner Bakery Cafe\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/HF19-wCbdSaP-zntpE51wA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/corner-bakery-cafe-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 100, \"categories\": [{\"alias\": \"bakeries\", \"title\": \"Bakeries\"}, {\"alias\": \"cafes\", \"title\": \"Cafes\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.788063, \"longitude\": -122.4026871}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"665 Market St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94105\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"665 Market St\", \"San Francisco, CA 94105\"]}, \"phone\": \"+14159354040\", \"display_phone\": \"(415) 935-4040\", \"distance\": 143.31090623659998}, {\"id\": \"california-pizza-kitchen-san-francisco-2\", \"name\": \"California Pizza Kitchen\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/5wf3Ld6QeeDPT07Jj8DNjg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/california-pizza-kitchen-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 424, \"categories\": [{\"alias\": \"pizza\", \"title\": \"Pizza\"}, {\"alias\": \"tradamerican\", \"title\": \"American (Traditional)\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7868611, \"longitude\": -122.402503}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"53 3rd St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"53 3rd St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14152780443\", \"display_phone\": \"(415) 278-0443\", \"distance\": 167.2624559622}, {\"id\": \"the-fresh-market-san-francisco\", \"name\": \"The Fresh Market\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/w4_3f7IDgmVww3nr-r3H1Q/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/the-fresh-market-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 92, \"categories\": [{\"alias\": \"cafes\", \"title\": \"Cafes\"}, {\"alias\": \"newamerican\", \"title\": \"American (New)\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7874277650535, \"longitude\": -122.406411636107}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"150 Stockton St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"150 Stockton St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14153624171\", \"display_phone\": \"(415) 362-4171\", \"distance\": 171.6361512335}, {\"id\": \"bio-cafe-san-francisco\", \"name\": \"Bio Cafe\", \"image_url\": \"https://s3-media4.fl.yelpcdn.com/bphoto/-0LumpfQ7PDHKRuiIHh8Pw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/bio-cafe-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 365, \"categories\": [{\"alias\": \"french\", \"title\": \"French\"}, {\"alias\": \"gluten_free\", \"title\": \"Gluten-Free\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.786643801853, \"longitude\": -122.405940330727}, \"transactions\": [\"pickup\"], \"price\": \"$\", \"location\": {\"address1\": \"75 O'Farrell St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"75 O'Farrell St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14153620255\", \"display_phone\": \"(415) 362-0255\", \"distance\": 171.6672678224}, {\"id\": \"wise-sons-jewish-delicatessen-san-francisco-2\", \"name\": \"Wise Sons Jewish Delicatessen\", \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/N4DEX1BskMbnDULW5jg-dQ/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/wise-sons-jewish-delicatessen-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 209, \"categories\": [{\"alias\": \"delis\", \"title\": \"Delis\"}, {\"alias\": \"bagels\", \"title\": \"Bagels\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7861320529474, \"longitude\": -122.40342621841}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"736 Mission St\", \"address2\": \"\", \"address3\": \"The Contemporary Jewish Museum\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"736 Mission St\", \"The Contemporary Jewish Museum\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14156557887\", \"display_phone\": \"(415) 655-7887\", \"distance\": 176.85864460759998}, {\"id\": \"chipotle-mexican-grill-san-francisco-17\", \"name\": \"Chipotle Mexican Grill\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/5vZXCtkBB1NmFHYLwKMThA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/chipotle-mexican-grill-san-francisco-17?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 143, \"categories\": [{\"alias\": \"mexican\", \"title\": \"Mexican\"}, {\"alias\": \"hotdogs\", \"title\": \"Fast Food\"}], \"rating\": 2.5, \"coordinates\": {\"latitude\": 37.7896278928562, \"longitude\": -122.404050590017}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"211 Sutter St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94104\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"211 Sutter St\", \"San Francisco, CA 94104\"]}, \"phone\": \"+14155904199\", \"display_phone\": \"(415) 590-4199\", \"distance\": 207.017772768}, {\"id\": \"delarosa-san-francisco-3\", \"name\": \"Delarosa\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/INii4Mly2iN5dFMghpOAOQ/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/delarosa-san-francisco-3?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 514, \"categories\": [{\"alias\": \"pizza\", \"title\": \"Pizza\"}, {\"alias\": \"italian\", \"title\": \"Italian\"}, {\"alias\": \"cocktailbars\", \"title\": \"Cocktail Bars\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.7856178857509, \"longitude\": -122.404516608598}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"37 Yerba Buena Ln\", \"address2\": null, \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"37 Yerba Buena Ln\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14158727363\", \"display_phone\": \"(415) 872-7363\", \"distance\": 216.6562548686}, {\"id\": \"mixt-san-francisco-9\", \"name\": \"Mixt\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/DOAvz0pcghE07_Kopl1icg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/mixt-san-francisco-9?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 31, \"categories\": [{\"alias\": \"salad\", \"title\": \"Salad\"}, {\"alias\": \"newamerican\", \"title\": \"American (New)\"}, {\"alias\": \"hotdogs\", \"title\": \"Fast Food\"}], \"rating\": 4.5, \"coordinates\": {\"latitude\": 37.7857602830938, \"longitude\": -122.404370398586}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"51 Yerba Buena Ln\", \"address2\": null, \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"51 Yerba Buena Ln\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14152968009\", \"display_phone\": \"(415) 296-8009\", \"distance\": 217.97512509199998}, {\"id\": \"bread-and-cocoa-san-francisco\", \"name\": \"Bread and Cocoa\", \"image_url\": \"https://s3-media4.fl.yelpcdn.com/bphoto/gHCxXR4lmR2iOzYccERp1w/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/bread-and-cocoa-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 623, \"categories\": [{\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}, {\"alias\": \"coffee\", \"title\": \"Coffee & Tea\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7897707496248, \"longitude\": -122.403701301385}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"199 Sutter St\", \"address2\": null, \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94104\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"199 Sutter St\", \"San Francisco, CA 94104\"]}, \"phone\": \"+14159567200\", \"display_phone\": \"(415) 956-7200\", \"distance\": 228.33921031839998}, {\"id\": \"the-grove-yerba-buena-san-francisco\", \"name\": \"The Grove Yerba Buena\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/bXS52lCaGBcF8KMrFCkQ1A/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/the-grove-yerba-buena-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 1503, \"categories\": [{\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}, {\"alias\": \"newamerican\", \"title\": \"American (New)\"}, {\"alias\": \"cafes\", \"title\": \"Cafes\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.786555, \"longitude\": -122.401971}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"690 Mission St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94105\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"690 Mission St\", \"San Francisco, CA 94105\"]}, \"phone\": \"+14159570558\", \"display_phone\": \"(415) 957-0558\", \"distance\": 230.45148516179998}, {\"id\": \"la-boulangerie-de-san-francisco-san-francisco-23\", \"name\": \"La Boulangerie de San Francisco\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/4oiGXet5N1PaTAMoSqCLbg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/la-boulangerie-de-san-francisco-san-francisco-23?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 45, \"categories\": [{\"alias\": \"coffee\", \"title\": \"Coffee & Tea\"}, {\"alias\": \"bakeries\", \"title\": \"Bakeries\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.789863, \"longitude\": -122.404596}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"222 Sutter St\", \"address2\": \"\", \"address3\": null, \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"222 Sutter St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+16284443532\", \"display_phone\": \"(628) 444-3532\", \"distance\": 232.83169902179998}, {\"id\": \"tropisue\\u00f1o-san-francisco-3\", \"name\": \"Tropisue\\u00f1o\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/hUZgDmue1VRfvIXai6I0wg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/tropisue%C3%B1o-san-francisco-3?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 3331, \"categories\": [{\"alias\": \"mexican\", \"title\": \"Mexican\"}, {\"alias\": \"cocktailbars\", \"title\": \"Cocktail Bars\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.7853008468227, \"longitude\": -122.403918653727}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"75 Yerba Buena Ln\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"75 Yerba Buena Ln\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14152430299\", \"display_phone\": \"(415) 243-0299\", \"distance\": 254.0045944902}, {\"id\": \"china-fun-express-san-francisco\", \"name\": \"China Fun Express\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/aysdGGL3XunO3n3n47WGHQ/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/china-fun-express-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 142, \"categories\": [{\"alias\": \"chinese\", \"title\": \"Chinese\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.79002, \"longitude\": -122.40412}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"211 Kearny St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"211 Kearny St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14158371179\", \"display_phone\": \"(415) 837-1179\", \"distance\": 254.26031861619995}, {\"id\": \"super-duper-burgers-san-francisco-6\", \"name\": \"Super Duper Burgers\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/i2NyydIljAIfeeZ8MjZJaQ/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/super-duper-burgers-san-francisco-6?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 1040, \"categories\": [{\"alias\": \"burgers\", \"title\": \"Burgers\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.7853266304187, \"longitude\": -122.403684605543}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"783 Mission St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"783 Mission St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14158821750\", \"display_phone\": \"(415) 882-1750\", \"distance\": 254.6792137248}, {\"id\": \"burger-bar-san-francisco\", \"name\": \"Burger Bar\", \"image_url\": \"https://s3-media4.fl.yelpcdn.com/bphoto/lCi1-iTjwn6PpFdMcado1w/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/burger-bar-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 2047, \"categories\": [{\"alias\": \"burgers\", \"title\": \"Burgers\"}, {\"alias\": \"tradamerican\", \"title\": \"American (Traditional)\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.7872902008062, \"longitude\": -122.407428324222}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"251 Geary St\", \"address2\": \"Fl 6\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"251 Geary St\", \"Fl 6\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14152964272\", \"display_phone\": \"(415) 296-4272\", \"distance\": 262.089307101}, {\"id\": \"the-cheesecake-factory-san-francisco-2\", \"name\": \"The Cheesecake Factory\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/glUCWzmmLujmMX_IP3kNig/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/the-cheesecake-factory-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 2537, \"categories\": [{\"alias\": \"desserts\", \"title\": \"Desserts\"}, {\"alias\": \"tradamerican\", \"title\": \"American (Traditional)\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.787189, \"longitude\": -122.407448}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"251 Geary St\", \"address2\": \"8th Fl\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"251 Geary St\", \"8th Fl\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14153914444\", \"display_phone\": \"(415) 391-4444\", \"distance\": 265.9844409832}, {\"id\": \"murphys-pub-san-francisco\", \"name\": \"Murphy's Pub\", \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/EqSzhg5PAGbusB8FfVPI4g/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/murphys-pub-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 365, \"categories\": [{\"alias\": \"pubs\", \"title\": \"Pubs\"}, {\"alias\": \"burgers\", \"title\": \"Burgers\"}, {\"alias\": \"fishnchips\", \"title\": \"Fish & Chips\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.79009, \"longitude\": -122.40413}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"217 Kearny St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"217 Kearny St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14156939588\", \"display_phone\": \"(415) 693-9588\", \"distance\": 268.6066995792}, {\"id\": \"boudin-bakery-and-cafe-san-francisco-14\", \"name\": \"Boudin Bakery & Cafe\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/IQqym3JCouR0m93XlGvafA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/boudin-bakery-and-cafe-san-francisco-14?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 332, \"categories\": [{\"alias\": \"bakeries\", \"title\": \"Bakeries\"}, {\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}, {\"alias\": \"salad\", \"title\": \"Salad\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7866386467972, \"longitude\": -122.407294734953}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"251 Geary St\", \"address2\": \"\", \"address3\": \"Macy's Cellar\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"251 Geary St\", \"Macy's Cellar\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14152964740\", \"display_phone\": \"(415) 296-4740\", \"distance\": 271.5438738264}, {\"id\": \"mcdonalds-san-francisco-27\", \"name\": \"McDonald's\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/GbQ4z_jFFk7h-qmtK0Yxdg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/mcdonalds-san-francisco-27?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 136, \"categories\": [{\"alias\": \"hotdogs\", \"title\": \"Fast Food\"}, {\"alias\": \"burgers\", \"title\": \"Burgers\"}], \"rating\": 2.5, \"coordinates\": {\"latitude\": 37.788875579834, \"longitude\": -122.401382446289}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"609 Market St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94105\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"609 Market St\", \"San Francisco, CA 94105\"]}, \"phone\": \"+14155432595\", \"display_phone\": \"(415) 543-2595\", \"distance\": 276.0066058332}, {\"id\": \"bin-55-san-francisco-2\", \"name\": \"Bin 55\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/DOa8mY12GoNC8s4onvJuKw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/bin-55-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 60, \"categories\": [{\"alias\": \"tradamerican\", \"title\": \"American (Traditional)\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.7848679, \"longitude\": -122.4040062}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"780 Mission St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"780 Mission St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14158961600\", \"display_phone\": \"(415) 896-1600\", \"distance\": 280.31546884259996}, {\"id\": \"the-irish-bank-bar-and-restaurant-san-francisco\", \"name\": \"The Irish Bank Bar & Restaurant\", \"image_url\": \"https://s3-media4.fl.yelpcdn.com/bphoto/Tp_O8rCTNCwibp6pReM-qw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/the-irish-bank-bar-and-restaurant-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 922, \"categories\": [{\"alias\": \"irish\", \"title\": \"Irish\"}, {\"alias\": \"irish_pubs\", \"title\": \"Irish Pub\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7904041670446, \"longitude\": -122.404693587035}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"10 Mark Ln\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"10 Mark Ln\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14157887152\", \"display_phone\": \"(415) 788-7152\", \"distance\": 293.62268287419994}, {\"id\": \"oneup-restaurant-and-lounge-san-francisco\", \"name\": \"OneUp Restaurant & Lounge\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/-iMR19nPHFSSSf3dlO3fXw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/oneup-restaurant-and-lounge-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 135, \"categories\": [{\"alias\": \"newamerican\", \"title\": \"American (New)\"}, {\"alias\": \"lounges\", \"title\": \"Lounges\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7893856734274, \"longitude\": -122.407065294443}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"345 Stockton St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"345 Stockton St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14153981234\", \"display_phone\": \"(415) 398-1234\", \"distance\": 294.06744007659995}, {\"id\": \"subway-san-francisco-66\", \"name\": \"Subway\", \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/hQn5r22XZXij4DJFBzb_eQ/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/subway-san-francisco-66?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 24, \"categories\": [{\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}, {\"alias\": \"hotdogs\", \"title\": \"Fast Food\"}], \"rating\": 2.5, \"coordinates\": {\"latitude\": 37.790412902832, \"longitude\": -122.404479980469}, \"transactions\": [\"pickup\"], \"price\": \"$\", \"location\": {\"address1\": \"425 Bush St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"425 Bush St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14154212000\", \"display_phone\": \"(415) 421-2000\", \"distance\": 297.0497884976}, {\"id\": \"the-keystone-san-francisco-2\", \"name\": \"The Keystone\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/34kf58YIpGcAWjeaMpEvTQ/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/the-keystone-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 151, \"categories\": [{\"alias\": \"cocktailbars\", \"title\": \"Cocktail Bars\"}, {\"alias\": \"newamerican\", \"title\": \"American (New)\"}, {\"alias\": \"diners\", \"title\": \"Diners\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.78486, \"longitude\": -122.40513}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"68 4th St\", \"address2\": null, \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"68 4th St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14157771200\", \"display_phone\": \"(415) 777-1200\", \"distance\": 304.34141835639997}, {\"id\": \"king-of-thai-noodle-house-san-francisco-3\", \"name\": \"King Of Thai Noodle House\", \"image_url\": \"https://s3-media4.fl.yelpcdn.com/bphoto/jh1bWYxSJJfJr2R0kO7h9Q/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/king-of-thai-noodle-house-san-francisco-3?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 1494, \"categories\": [{\"alias\": \"thai\", \"title\": \"Thai\"}, {\"alias\": \"noodles\", \"title\": \"Noodles\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.786654, \"longitude\": -122.407756}, \"transactions\": [\"pickup\"], \"price\": \"$$\", \"location\": {\"address1\": \"184 O'Farrell St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"184 O'Farrell St\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14156779991\", \"display_phone\": \"(415) 677-9991\", \"distance\": 308.154572459}, {\"id\": \"lemonade-san-francisco-3\", \"name\": \"Lemonade\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/9Be28uh2Ir9ULx-PTNBQAg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/lemonade-san-francisco-3?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 320, \"categories\": [{\"alias\": \"newamerican\", \"title\": \"American (New)\"}, {\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7847302526431, \"longitude\": -122.403892631825}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"781 Mission St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"781 Mission St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14155220191\", \"display_phone\": \"(415) 522-0191\", \"distance\": 308.2587128504}, {\"id\": \"caf\\u00e9-de-la-presse-san-francisco-3\", \"name\": \"Caf\\u00e9 de la Presse\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/BeJ1_Uf77pH-4vkIXism4A/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/caf%C3%A9-de-la-presse-san-francisco-3?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 1358, \"categories\": [{\"alias\": \"french\", \"title\": \"French\"}, {\"alias\": \"desserts\", \"title\": \"Desserts\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7902999520302, \"longitude\": -122.405442148447}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"352 Grant Ave\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"352 Grant Ave\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14153982680\", \"display_phone\": \"(415) 398-2680\", \"distance\": 311.06353497599997}, {\"id\": \"sf-wraps-san-francisco\", \"name\": \"SF Wraps\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/HR7naMhYYP_UJSYah6jHzw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/sf-wraps-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 166, \"categories\": [{\"alias\": \"mediterranean\", \"title\": \"Mediterranean\"}, {\"alias\": \"hotdogs\", \"title\": \"Fast Food\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.7905810937305, \"longitude\": -122.404173019757}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"255 Kearny St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"255 Kearny St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14159563070\", \"display_phone\": \"(415) 956-3070\", \"distance\": 311.9110295134}, {\"id\": \"working-girls-cafe-san-francisco\", \"name\": \"Working Girls' Cafe\", \"image_url\": \"https://s3-media3.fl.yelpcdn.com/bphoto/ie5x9KEYnkMCYPXYGqFOkA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/working-girls-cafe-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 454, \"categories\": [{\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}, {\"alias\": \"salad\", \"title\": \"Salad\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.790584936738, \"longitude\": -122.404048740864}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"259 Kearny St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"259 Kearny St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14153981390\", \"display_phone\": \"(415) 398-1390\", \"distance\": 313.052357348}, {\"id\": \"subway-san-francisco-6\", \"name\": \"Subway\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/Ush83wdv5PDj8fj7b60ZXw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/subway-san-francisco-6?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 50, \"categories\": [{\"alias\": \"hotdogs\", \"title\": \"Fast Food\"}, {\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}], \"rating\": 2.5, \"coordinates\": {\"latitude\": 37.7887986358251, \"longitude\": -122.400875354766}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"30 2nd St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94105\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"30 2nd St\", \"San Francisco, CA 94105\"]}, \"phone\": \"+14153481709\", \"display_phone\": \"(415) 348-1709\", \"distance\": 317.18609197859996}, {\"id\": \"mcdonalds-san-francisco-61\", \"name\": \"McDonald's\", \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/ZP4weXSx4n5XE0cgjo0jrw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/mcdonalds-san-francisco-61?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 100, \"categories\": [{\"alias\": \"hotdogs\", \"title\": \"Fast Food\"}, {\"alias\": \"burgers\", \"title\": \"Burgers\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.7892226640774, \"longitude\": -122.407831530094}, \"transactions\": [], \"price\": \"$\", \"location\": {\"address1\": \"441 Sutter St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"441 Sutter St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14153621082\", \"display_phone\": \"(415) 362-1082\", \"distance\": 339.6080927814}, {\"id\": \"tads-steak-restaurant-san-francisco\", \"name\": \"Tad's Steak Restaurant\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/3EiwJyAunkPHaQrL9OtIuw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/tads-steak-restaurant-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 621, \"categories\": [{\"alias\": \"steak\", \"title\": \"Steakhouses\"}, {\"alias\": \"desserts\", \"title\": \"Desserts\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.78597, \"longitude\": -122.40758}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"120 Powell St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"120 Powell St\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14159821718\", \"display_phone\": \"(415) 982-1718\", \"distance\": 341.3211064642}, {\"id\": \"the-pink-elephant-alibi-san-francisco-3\", \"name\": \"The Pink Elephant Alibi\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/YywHH2lG6uIM5R7eQ8VFdA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/the-pink-elephant-alibi-san-francisco-3?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 623, \"categories\": [{\"alias\": \"newamerican\", \"title\": \"American (New)\"}, {\"alias\": \"breakfast_brunch\", \"title\": \"Breakfast & Brunch\"}, {\"alias\": \"gastropubs\", \"title\": \"Gastropubs\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.7867846, \"longitude\": -122.4004657}, \"transactions\": [\"pickup\"], \"price\": \"$$\", \"location\": {\"address1\": \"142 Minna St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94105\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"142 Minna St\", \"San Francisco, CA 94105\"]}, \"phone\": \"\", \"display_phone\": \"\", \"distance\": 342.44716166219996}, {\"id\": \"buckhorn-grill-san-francisco-4\", \"name\": \"Buckhorn Grill\", \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/JdDJwCd-7R1ceifus0YneQ/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/buckhorn-grill-san-francisco-4?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 289, \"categories\": [{\"alias\": \"tradamerican\", \"title\": \"American (Traditional)\"}, {\"alias\": \"burgers\", \"title\": \"Burgers\"}, {\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.784516, \"longitude\": -122.4040259}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"101 4th St\", \"address2\": \"\", \"address3\": \"Metreon\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"101 4th St\", \"Metreon\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14153696150\", \"display_phone\": \"(415) 369-6150\", \"distance\": 342.5989063308}, {\"id\": \"bancarella-san-francisco\", \"name\": \"Bancarella\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/_8QEB6s4s3HVTEu8roYhKw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/bancarella-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 55, \"categories\": [{\"alias\": \"desserts\", \"title\": \"Desserts\"}, {\"alias\": \"coffeeroasteries\", \"title\": \"Coffee Roasteries\"}, {\"alias\": \"cafes\", \"title\": \"Cafes\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.787971124053, \"longitude\": -122.408274561167}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"350 Powell St\", \"address2\": null, \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"350 Powell St\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14159247478\", \"display_phone\": \"(415) 924-7478\", \"distance\": 347.8460306536}, {\"id\": \"bar-norcini-san-francisco\", \"name\": \"Bar Norcini\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/hRw7LaRFMqbXee5xjQpLVA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/bar-norcini-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 89, \"categories\": [{\"alias\": \"bars\", \"title\": \"Bars\"}, {\"alias\": \"newamerican\", \"title\": \"American (New)\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7867279201746, \"longitude\": -122.408143803477}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"225 Powell St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"225 Powell St\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14153973621\", \"display_phone\": \"(415) 397-3621\", \"distance\": 351.452014418}, {\"id\": \"inay-filipino-kitchen-san-francisco\", \"name\": \"Inay Filipino Kitchen\", \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/GaLV20_TgFvXxFmVqNFc6w/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/inay-filipino-kitchen-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 155, \"categories\": [{\"alias\": \"filipino\", \"title\": \"Filipino\"}], \"rating\": 2.5, \"coordinates\": {\"latitude\": 37.7844585480027, \"longitude\": -122.403501078651}, \"transactions\": [\"pickup\"], \"price\": \"$\", \"location\": {\"address1\": \"135 Fourth St\", \"address2\": \"\", \"address3\": \"Metreon\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"135 Fourth St\", \"Metreon\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14152274629\", \"display_phone\": \"(415) 227-4629\", \"distance\": 352.6198158956}, {\"id\": \"burger-house-san-francisco\", \"name\": \"Burger House\", \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/956C82dEFFkIKMoO4NV-tg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/burger-house-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 186, \"categories\": [{\"alias\": \"burgers\", \"title\": \"Burgers\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.78692, \"longitude\": -122.40842}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"237 Powell St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"237 Powell St\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14159562311\", \"display_phone\": \"(415) 956-2311\", \"distance\": 355.19112278719996}, {\"id\": \"cafe-5-san-francisco-3\", \"name\": \"Cafe 5\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/b-hgC4exNiOEBBs-551YKA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/cafe-5-san-francisco-3?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 40, \"categories\": [{\"alias\": \"cafes\", \"title\": \"Cafes\"}, {\"alias\": \"salad\", \"title\": \"Salad\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.7859072, \"longitude\": -122.4008003}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"151 3rd St\", \"address2\": null, \"address3\": \"Sfmoma\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"151 3rd St\", \"Sfmoma\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14156150515\", \"display_phone\": \"(415) 615-0515\", \"distance\": 355.5970627088}, {\"id\": \"sightglass-coffee-san-francisco-5\", \"name\": \"Sightglass Coffee\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/NUWNCJzbaGcvXNHFSmV-HA/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/sightglass-coffee-san-francisco-5?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 16, \"categories\": [{\"alias\": \"cafes\", \"title\": \"Cafes\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7859072, \"longitude\": -122.4008003}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"151 3rd St\", \"address2\": \"\", \"address3\": \"Sfmoma\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"151 3rd St\", \"Sfmoma\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14153574000\", \"display_phone\": \"(415) 357-4000\", \"distance\": 355.5970627088}, {\"id\": \"cafe-bellini-san-francisco\", \"name\": \"Cafe Bellini\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/MK859DEsXRHvXRzuf-575Q/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/cafe-bellini-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 342, \"categories\": [{\"alias\": \"newamerican\", \"title\": \"American (New)\"}, {\"alias\": \"italian\", \"title\": \"Italian\"}, {\"alias\": \"cafes\", \"title\": \"Cafes\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.7869262695312, \"longitude\": -122.408424377441}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"235 Powell St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94102\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"235 Powell St\", \"San Francisco, CA 94102\"]}, \"phone\": \"+14159565101\", \"display_phone\": \"(415) 956-5101\", \"distance\": 362.94168813379997}, {\"id\": \"pasta-moto-san-francisco\", \"name\": \"Pasta Moto\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/8bro_uJ_APwkQxUYGeHgDw/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/pasta-moto-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 183, \"categories\": [{\"alias\": \"italian\", \"title\": \"Italian\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.784565, \"longitude\": -122.406018}, \"transactions\": [\"pickup\"], \"price\": \"$$\", \"location\": {\"address1\": \"845 Market St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"845 Market St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14155466686\", \"display_phone\": \"(415) 546-6686\", \"distance\": 363.39380002}, {\"id\": \"buckhorn-grill-san-francisco-san-francisco\", \"name\": \"Buckhorn Grill - San Francisco\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/L371Hrd_MbA7dj7JeeAXJg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/buckhorn-grill-san-francisco-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 587, \"categories\": [{\"alias\": \"sandwiches\", \"title\": \"Sandwiches\"}, {\"alias\": \"steak\", \"title\": \"Steakhouses\"}], \"rating\": 4.0, \"coordinates\": {\"latitude\": 37.784597, \"longitude\": -122.406154}, \"transactions\": [], \"price\": \"$$\", \"location\": {\"address1\": \"845 Market St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"845 Market St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14159789770\", \"display_phone\": \"(415) 978-9770\", \"distance\": 364.9359339816}, {\"id\": \"banana-house-san-francisco\", \"name\": \"Banana House\", \"image_url\": \"https://s3-media1.fl.yelpcdn.com/bphoto/hlJNPUlKofhzpML70VxCIg/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/banana-house-san-francisco?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 381, \"categories\": [{\"alias\": \"thai\", \"title\": \"Thai\"}, {\"alias\": \"desserts\", \"title\": \"Desserts\"}, {\"alias\": \"salad\", \"title\": \"Salad\"}], \"rating\": 3.0, \"coordinates\": {\"latitude\": 37.7910652160645, \"longitude\": -122.404312133789}, \"transactions\": [\"pickup\"], \"price\": \"$$\", \"location\": {\"address1\": \"321 Kearny St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94108\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"321 Kearny St\", \"San Francisco, CA 94108\"]}, \"phone\": \"+14159819090\", \"display_phone\": \"(415) 981-9090\", \"distance\": 365.87182956519996}, {\"id\": \"tokyo-express-san-francisco-2\", \"name\": \"Tokyo Express\", \"image_url\": \"https://s3-media2.fl.yelpcdn.com/bphoto/1udNhOC7ntEONnnQZDszaQ/o.jpg\", \"is_closed\": false, \"url\": \"https://www.yelp.com/biz/tokyo-express-san-francisco-2?adjust_creative=aDtBAdXlXFBIunfcv0h44w&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=aDtBAdXlXFBIunfcv0h44w\", \"review_count\": 375, \"categories\": [{\"alias\": \"sushi\", \"title\": \"Sushi Bars\"}, {\"alias\": \"japanese\", \"title\": \"Japanese\"}], \"rating\": 3.5, \"coordinates\": {\"latitude\": 37.7844, \"longitude\": -122.40494}, \"transactions\": [\"delivery\", \"pickup\"], \"price\": \"$$\", \"location\": {\"address1\": \"814 Mission St\", \"address2\": \"\", \"address3\": \"\", \"city\": \"San Francisco\", \"zip_code\": \"94103\", \"country\": \"US\", \"state\": \"CA\", \"display_address\": [\"814 Mission St\", \"San Francisco, CA 94103\"]}, \"phone\": \"+14152229933\", \"display_phone\": \"(415) 222-9933\", \"distance\": 366.8197791054}], \"total\": 40, \"region\": {\"center\": {\"latitude\": 37.78767159827815, \"longitude\": -122.40434646606445}}}"
        }
      ]
    },
    {
      "_postman_id": "fe7e2416-4af9-fffc-02af-b8fc2c58a181",
      "name": "Update Environment",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Include util",
              "eval(pm.globals.get('util'));",
              "",
              "// Transform environment values to match Postman API format",
              "const env = pm.environment.toObject();",
              "const values = Object.keys(env).map(key => {",
              "    return { key, value: `${env[key]}` };",
              "});",
              "",
              "// Save updated values to globals",
              "updateGlobals({ values });"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Include util",
              "eval(pm.globals.get('util'));",
              "",
              "// Tests",
              "pm.test('Response is OK', () => {",
              "    pm.response.to.be.ok;",
              "});",
              "",
              "pm.test('Got environment', () => {",
              "    pm.expect(pm.response.json()).to.have.property('environment').that.is.an('object');",
              "});",
              "",
              "// Log on success, stop and log on error",
              "const { environment: env, error } = tryParse(pm.response.text(), {});",
              "",
              "if (env) {",
              "    console.log(`\"${env.name}\" environment updated.`);",
              "}",
              "else if (error) {",
              "    stopWorkflow(error.message);",
              "}",
              "else {",
              "    stopWorkflow(responseBody);",
              "}",
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{postmanApiKey}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"environment\": {\n\t\t\"values\": {{values}}\n\t}\n}"
        },
        "url": "https://api.getpostman.com/environments/{{environmentID}}",
        "description": "Update the Postman environment for the lunch picker. This step is necessary when running the collection as a monitor, since updates to the environment that happen during a monitor run don't persist otherwise.\n\nMake sure `postmanApiKey` and `environmentID` are set in your environment. See the [Postman Pro API documentation](https://docs.api.getpostman.com/#authentication). You can get your environment id by downloading your environment and copying it from the `id` property, or you can get your environment from the [Postman Pro API](https://docs.api.getpostman.com/#d26bd079-e3e1-aa08-7e21-66f55df99351). Make sure the `environmentID` matches the id of the environment you run the collection with!\n\n|Environment Variable Name |Required? |Description\n|--------------------------|----------|--------------\n|`postmanApiKey`            |**YES**  |A Postman Pro [API key](https://docs.api.getpostman.com/#authentication).\n|`environmentID`            |**YES**  |The id for your environment."
      },
      "response": []
    },
    {
      "_postman_id": "743d4b24-e3ee-e6b2-83b8-2ddfd1332dae",
      "name": "Post to Slack",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Include util",
              "eval(pm.globals.get('util'));",
              "",
              "// Polling icons",
              "const icons = [",
              "    ':one:',",
              "    ':two:',",
              "    ':three:',",
              "    ':four:',",
              "    ':five:',",
              "    ':six:',",
              "    ':seven:',",
              "    ':eight:',",
              "    ':nine:',",
              "    ':keycap_ten:',",
              "];",
              "",
              "const choices = tryParse(pm.globals.get('choices'), []);",
              "const formattedChoices = format(choices);",
              "",
              "updateGlobals({ formattedChoices });",
              "",
              "/**",
              " * Create a complete Slack formatted message from the restaurant choices.",
              " *",
              " * @param {Object[]} choices - An array of Yelp business objects.",
              " * @returns {String} - A formatted Slack message.",
              " */",
              "function format (choices) {",
              "    let formattedChoices = choices.map(restaurantToString);",
              "    ",
              "    if (choices.length > 1) {",
              "        // Add polling icons to choices",
              "        formattedChoices = formattedChoices.map((c, i) => `${icons[i]} ${c}`);",
              "        ",
              "        // Add a polling reminder",
              "        const reactionOptions = formattedChoices.map((c, i) => icons[i]).join(', ');",
              "        const pollPrompt = `Add reactions (${reactionOptions}) to vote for your preferences!`;",
              "        formattedChoices.push(pollPrompt);",
              "    }",
              "    ",
              "    const header = `\\n_Restaurant ${pluralize(choices, 'choice')} for today:_`;",
              "    formattedChoices.unshift(header);",
              "",
              "    return formattedChoices.join('\\n\\n');",
              "}",
              "",
              "/**",
              " * Create a Slack formatted display version of the restaurant.",
              " *",
              " * @param {Object} restaurant - A Yelp business object.",
              " * @param {Number} index",
              " * @returns {String}",
              " */",
              "function restaurantToString (restaurant, index) {",
              "    return [",
              "        `<${cleanUpUrl(restaurant.url)}|*${restaurant.name}*>`,",
              "        getCategories(restaurant),",
              "        getDistanceInMiles(restaurant),",
              "        `${restaurant.rating} stars`,",
              "        restaurant.price,",
              "    ].join('\\n');",
              "}",
              "",
              "function getCategories ({ categories }) {",
              "    const titles = categories.map(c => c.title);",
              "    return `_${titles.join(', ')}_`;",
              "}",
              "",
              "function getDistanceInMiles ({ distance }) {",
              "    const miles = _.round(0.000621371 * distance, 2);",
              "    return `${miles} miles away`;",
              "}",
              "",
              "function cleanUpUrl (url) {",
              "    const queryIndex = url.indexOf('?');",
              "    return url.slice(0, queryIndex);",
              "}"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Include util",
              "eval(pm.globals.get('util'));",
              "",
              "// Tests",
              "pm.test('Response is OK', () => {",
              "    pm.response.to.be.ok;",
              "});",
              "",
              "pm.test('Slack response text is ok', () => {",
              "    pm.expect(pm.response.text()).to.equal('ok');",
              "});",
              "",
              "// Final cleanup",
              "clearLunchPickerGlobals();"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"text\": {{formattedChoices}}\n}"
        },
        "url": "{{webhook}}",
        "description": "Post formatted restaurant choices to Slack. Include voting instructions if there's more than one choice.   \n\n\n> Side note: This is the last request in the collection for a reason. Posting to Slack is the main side effect of this collection, and we don't want it to happen more than once. When a monitor is created for this collection, an abnormal failure of the monitor will trigger a retry. By putting this request last, we get some failure tolerance in case there is an abnormal failure of one of the previous requests _and_ avoid an undesired duplication of the collection's primary side effect.\n   \n\nMake sure `webhook` is set in your environment. To get a webhook url, [create a Slack app](https://api.slack.com/slack-apps), [activate incoming webhooks](https://api.slack.com/incoming-webhooks), and add a webhook for your team.\n\n|Environment Variable Name |Required? |Description\n|--------------------------|----------|--------------\n|`webhook`                 |**YES**   |An [incoming webhook](https://api.slack.com/incoming-webhooks) url."
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "a5e976e6-031b-44e1-ac04-1a852650debe",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "3ab68987-bb97-48ae-9869-f500694db271",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}